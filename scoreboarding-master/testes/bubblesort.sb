/*
UF
add: 4
mul : 2
inteiro :4
INST
add : 2
addi:1
sub:1
subi:2 
mul: 10
div:4
and:3
or:2
not:3
blt:2
bgt:4
beq:5
bne:6
j:4
lw:2
sw:2
*/
. data
#tamanho do array
5
#array:
-1 2 31 333 -32
#resultado começa no endereço 1
. text
#mul r5, r31, r31
#addi r31, r31, 1
#carrega o tamanho do array
lw r1, 0(r0)
addi r30, r30, 4
mul r1, r1, r30
subi r1, r1, 4 
addi r2, r0, 0
#loop externo
addi r8, r0, 4
addi r3, r0, 1
addi r4, r0, 0
#loop interno  
lw r5, 0(r8)
lw r6, 4(r8)
bgt r5, r6, 16
beq r5, r6, 12
#se r5>=r6 pula a troca
sw r6, 0(r8)
sw r5, 4(r8)
addi r3, r0, 0
#pula a troca
addi r8, r8, 4
addi r4, r4, 4
#se r4<r1 loop interno
blt r4, r1, -40
subi r1, r1, 4
addi r2, r2, 4

#se r3==0 (flag de troca) loop externo
beq r3, r0, -64
exit

